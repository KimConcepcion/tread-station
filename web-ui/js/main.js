/* 
 This file was generated by Dashcode.  
 You may edit this file to customize your widget or web page 
 according to the license.txt file included in the project.
 */

 var treadmill = null;

 var sayings = [
 	"Get ready to rumble!",
	"Welcome to Club Med",
	"Beach Body in Progress",
	"Work those abs",
	"I'm sexy and I know it!"
 ];
 
//
// Function: load()
// Called by HTML body element's onload event when the widget is ready to start
//
$(function() {
    treadmill = new Treadmill();
	
	var dial = $("#speed-dial").dial();
	treadmill.dial = dial;
	dial.treadmill = treadmill;
		
	/*$('#speed-startstop').click(function(e) {
		console.log($(this).text());
		if($(this).text() == "RUN")		
			treadmill.setSpeed("2.2");
		else
			treadmill.setSpeed("STOP");
		});*/
		
		$("#enter-weight").TouchSpin({
			width: '150px',
min: 50, // Minimum value.
max: 600, // Maximum value.
boostat: 5, // Boost at every nth step.
maxboostedstep: 10, // Maximum step when boosted.
postfix: 'lbs', // Text after the input.
step: 1, // Incremental/decremental step on up/down change.
stepinterval: 100, // Refresh rate of the spinner in milliseconds.
stepintervaldelay: 500 // Time in milliseconds before the spinner starts to spin.
});

	$('.speed-decrease').on('click', function() { treadmill.decreaseSpeed(); });
	$('.speed-increase').on('click', function() { treadmill.increaseSpeed(); });
	$('.stop').on('click', function() { treadmill.stop(); });
	$('.reset').on('click', function() { treadmill.reset(); });
	
	$('.quick-dial li').on('click', function() { treadmill.setSpeed(Number($(this).text())); });
	
	Treadmill.prototype.parseEvent = function(name, data)
	{
		if(name=="connected") {
			$("body").addClass("connected");	
			$("body").removeClass("disconnected");	
			$(".status-indicator").text("LET'S GO!");
		} else if(name=="closed") {
			$("body").addClass("disconnected");	
			$("body").removeClass("connected");
			$("body").removeClass("running");
			$("body").removeClass("stopped");
			$(".status-indicator").text("DISCONNECTED");    
		} else if(name=="running") {
			$("body").removeClass("stopped");
			$("body").addClass("running");
			$(".status-indicator").text("RUNNING");
		} else if(name=="stopping") {
			$("body").removeClass("running");
			$("body").addClass("stopped");
			$(".status-indicator").text("STOPPING");
		} else if(name=="stopped") {
			$("body").removeClass("running");
			$("body").addClass("stopped");
			$(".status-indicator").text("");
			console.log("wait for it");
			treadmill.resetTimer = setTimeout(function() { treadmill.reset(); $("#user-select").modal(); }, 10000);
		} else if(name=="sonar.value") {
			if(treadmill.sonarSlider) {
				treadmill.sonarSlider.setCurrent(data);
			}
		} else if(name=="sonar.error") {
			if(treadmill.sonarSlider) {
				//console.log("sonar error: "+data);
				treadmill.sonarSlider.error(data);
			}
		}
	}
	
	treadmill.on("user", function(user) { if(user!=null) $("#view-current-user").text(user.name); });
	treadmill.on("users", function(users) { 
		var usergroup = $("#user-select .users");
		usergroup.html("");
		for(var u in users)
		{
			var user = users[u];
			if(u<=0) continue;
			var radio = d3.select(usergroup[0]).append("label")
				.attr("class","btn btn-default")
				.text(user.name)
				.on('click', function() {
					//console.log("yes "+this.val());
					//$("#enter-weight").attr("disabled","false");
					var weight = $("#enter-weight");
					var user = $(this).find("input").val();
					if(user>0) {
						weight.removeClass("disabled");
						weight.val( KgToLbs(treadmill.users[user].weight) );
					}
				})
				.append("input")
					.attr("type","radio")
					.attr("id","user"+user.userid)
					.attr("name","user")
					.attr("value",user.userid);
			}
	});
	
	var form = $("#user-select-form");
	$("#user-select").on("show.bs.modal", function() { 
		//$("#user-select.modal .modal-title").text(sayings[Math.floor(Math.random()*sayings.length)]);
		$("#user-select.modal .modal-footer .qotd").html(qotd_rich());
	});

	$("#session-start").on("click", function() {
		var user = form.find("input:radio[name=user]:checked").val();
		var weight = form.find("input[name=weight]").val();
		console.log("session[user:"+user+", weight:"+weight+"]");
		treadmill.setUser(user, LbsToKg(weight));
	});
	
	// show some debug info
	var s = "<hr/>width:"+window.innerWidth+"  height:"+window.innerHeight;
	$("div#debug").html(s);
		
    treadmill.connect("treadmill");
	
	$("#user-select").modal();
});


Treadmill.prototype.onSpeedChanged = function(value) 
{
	if(value==0.0)
		$(".speed-indicator").text("0");
    else
    	$(".speed-indicator").text(value.toFixed(1));   
	if(this.dial)
	{
		this.dial.setSpeed(value);
	}
}

Treadmill.prototype.onInclineChanged = function(value)
{
    //$("#InclineIndicator").text(Math.round(value));
}

Treadmill.prototype.onUpdateRunningTime = function(seconds, minutes, hours)
{
    var rt = zeropad(minutes)+":"+zeropad(seconds);
    if(hours>0)	// more than an hour
		rt = hours+":"+rt;
	$(".running-time").text(rt);
	if(this.dial) this.dial.setRunningTime(seconds,minutes,hours);
}

function SetFavSpeed(event)
{
    treadmill.setSpeed($(event.target).text());
}



function decline(event)
{
    treadmill.inclineDown();
}


function incline(event)
{
    treadmill.inclineUp();
}


function inclineFloor(event)
{
    treadmill.floor();
}

function KgToLbs(kg)
{
	return Math.round(kg*2.2);
}


function LbsToKg(lbs)
{
	return lbs/2.2;
}
